module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    input button,            // Super cool button!
    input button2,
    input button3,
    output high1,
    output high2,
    output high3,
    output low1,
    output low2,
    output low3
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    reset_conditioner reset_cond2;
    reset_conditioner reset_cond3;
    .rst(rst){
     // bcounter counter;        // button press counter
      main mymain;
    }
  }
  
  
  always {
    reset_cond.in = ~rst_n;   // input raw inverted reset signal
    rst = reset_cond.out;     // conditioned reset
    reset_cond2.in = ~rst_n;   // input raw inverted reset signal
    rst = reset_cond2.out;     // conditioned reset_cond
    reset_cond3.in = ~rst_n;   // input raw inverted reset signal
    rst = reset_cond3.out;     // conditioned reset
    spi_miso = bz;            // not using SPI
    spi_channel = bzzzz;      // not using flags
    avr_rx = bz;              // not using serial port
    
    mymain.left2 = !button; // make button active high 
    mymain.center1 = !button2; 
    mymain.right0 = !button3; 
    //make lights go light up
    high1 = mymain.high1;
    high2 = mymain.high2;
    high3 = mymain.high3;
    low1 = mymain.low1;
    low2 = mymain.low2;
    low3 = mymain.low3;
    
    led[1:0] = mymain.result;      // connect the counter to the LEDs
    
  }
}